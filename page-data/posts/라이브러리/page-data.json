{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/라이브러리","result":{"pageContext":{"currentCategory":"라이브러리","categories":["All","블로그","알쓸코잡","라이브러리","할일","React","일상"],"edges":[{"node":{"id":"28e9a9e3-03cc-51c2-9b68-ef85093dbe20","excerpt":"📚 알쓸코잡 : 알아두면 쓸모있는 코딩 잡학지식! 1️⃣ 서론 지난 포스팅에서  는 자바로 만들어진 독립적인 프로그램이라고 말씀드렸습니다. 이러한 이유 때문에 Node 개발환경에서는  를 조작하여 사용하는것이 어렵고 이때문에  를 함께 사용한다고 말씀을 드렸습니다.  를 사용하면 각종 커맨드 명령어(Command line interface) 를 통해  를 조작이 가능하지만 명령을 내리기위한 코드가 길어지고 관리가 어렵다는 단점을 갖고 있습니다. 이러한 문제점을 해결하기 위해  이라는것이 존재하는데요, 이게 무엇이고 어떻게 사용하는지 지금부터 살펴보겠습니다. 2️⃣ openapi-generator 버전 관리 간혹 팀원들과 협업을 하다보면 동일한 Oepnapi spec 을 갖고  를 통해 생성된 결과물이 서로 다를때가 있습니다. 해당 결과물들을 자세히 보면 띄어쓰기 혹은 interface를 표현하는 방식정도가 달라져 있는것을 볼 수 있습니다. 동일한 Openapi spec 을 갖고 만들었지만…","fields":{"slug":"/openapitools/"},"frontmatter":{"categories":"블로그 알쓸코잡 라이브러리","title":"openapitools.json 활용편","date":"July 05, 2023"}},"next":{"fields":{"slug":"/openapi-generator-cli/"}},"previous":null},{"node":{"id":"b75b786f-04d6-5c8e-8fc8-d025e14029dc","excerpt":"📚 알쓸코잡 : 알아두면 쓸모있는 코딩 잡학지식! 1️⃣ 서론 프론트엔드 영역에서 웹애플리케이션을 개발하다 보면 종종 백엔드 API와의 통신을 필요로 합니다. 이때 API와의 통합 작업은 많은 시간과 노력을 요구합니다. 특히 타입스크립트를 사용하고 있다면, 해야할 작업이 훨씬 많아지게 되는데요. 백엔드로 데이터를 요청할때 어떠한 형태로 보내야할지, 데이터를 받을때 어떠한 형태로 받을지에 대한 인터페이스 정의가 필요해지기 때문입니다. 이러한 작업을 더욱 효율적으로 수행하고 일관성 있는 코드를 유지하기 위해서 OpenAPI Generator 를 활용하는 방법이 있습니다. 지금부터 OpenAPI Generator 가 무엇인지 알아보도록 하겠습니다. 2️⃣ OpenAPI generator 앞선 포스팅에서 OpenAPI 와 OpenAPI를 만든 OpenAPI Initiative에 대해서 언급한적이 있었습니다. OpenAPI Generator는 OpenAPI Initiative 에 의해 시작된 프로…","fields":{"slug":"/openapi-generator-cli/"},"frontmatter":{"categories":"블로그 알쓸코잡 라이브러리","title":"OpenAPI-generator 와 OpenAPI-generator-cli","date":"June 27, 2023"}},"next":{"fields":{"slug":"/open-api-and-openapi/"}},"previous":{"fields":{"slug":"/openapitools/"}}},{"node":{"id":"80631fa1-9810-507a-adef-681b54defa71","excerpt":"🤔 고민 웹사이트를 개발하다 보면 백엔드와 프론트 간의 개발 속도 차이로 인한 문제와, API 응답 데이터에 의존하는 로직에 대한 테스트 코드 작성이 어려운 문제 등이 자주 발생합니다. 이러한 문제들은 현재 진행 중인 개발에 집중하기 어렵게 만들어줄 뿐 아니라 중복 코드와 같은 불필요한 작업을 초래합니다. 따라서 이번 글에서는 각각의 문제들이 발생하는 원인과 해결책에 대해 자세히 살펴보겠습니다. 함께 읽어보세요! < 정리 > 백엔드와 프론트 간의 개발속도 차이로 인한 문제 백엔드와 프론트가 동시에 개발하면 발생되는 문제점 API 응답 데이터에 의존을 갖는 로직에 대한 테스트코드 작성 API를 호출하는 Custom hooks 혹은 Component 코드에 대한 테스트 코드 작성 1️⃣ 첫번째 고민 ( 백엔드와 프론트 간의 개발속도 차이로 인한 문제 )  회사에서는 일반적으로  의 순서로 제품을 개발합니다. 하지만 실제로는  처럼 백엔드, 프론트엔드 개발이 동시에 진행되는 경우가 많습니다…","fields":{"slug":"/mock-service-worker/"},"frontmatter":{"categories":"블로그 라이브러리","title":"MSW - 더 나이스한 목킹을 위한 고민","date":"June 11, 2023"}},"next":{"fields":{"slug":"/todo-2023/"}},"previous":{"fields":{"slug":"/open-api-and-openapi/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}