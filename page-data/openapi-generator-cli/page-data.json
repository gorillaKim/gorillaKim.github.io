{"componentChunkName":"component---src-templates-blog-template-js","path":"/openapi-generator-cli/","result":{"data":{"cur":{"id":"b75b786f-04d6-5c8e-8fc8-d025e14029dc","html":"<blockquote>\n<p>📚 <strong>알쓸코잡 : 알아두면 쓸모있는 코딩 잡학지식!</strong></p>\n</blockquote>\n<br>\n<h2 id=\"1️⃣-서론\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-%EC%84%9C%EB%A1%A0\" aria-label=\"1️⃣ 서론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ 서론</h2>\n<p>프론트엔드 영역에서 웹애플리케이션을 개발하다 보면 종종 백엔드 API와의 통신을 필요로 합니다. 이때 API와의 통합 작업은 많은 시간과 노력을 요구합니다.</p>\n<p>특히 타입스크립트를 사용하고 있다면, 해야할 작업이 훨씬 많아지게 되는데요. 백엔드로 데이터를 요청할때 어떠한 형태로 보내야할지, 데이터를 받을때 어떠한 형태로 받을지에 대한 인터페이스 정의가 필요해지기 때문입니다.</p>\n<p>이러한 작업을 더욱 효율적으로 수행하고 일관성 있는 코드를 유지하기 위해서 <strong>OpenAPI Generator</strong> 를 활용하는 방법이 있습니다.</p>\n<p>지금부터 OpenAPI Generator 가 무엇인지 알아보도록 하겠습니다.</p>\n<br>\n<br>\n<h2 id=\"2️⃣-openapi-generator\" style=\"position:relative;\"><a href=\"#2%EF%B8%8F%E2%83%A3-openapi-generator\" aria-label=\"2️⃣ openapi generator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2️⃣ OpenAPI generator</h2>\n<p><a href=\"https://gorillakim.github.io/open-api-and-openapi/\"><strong>앞선 포스팅</strong></a>에서 OpenAPI 와 OpenAPI를 만든 OpenAPI Initiative에 대해서 언급한적이 있었습니다.</p>\n<p>OpenAPI Generator는 OpenAPI Initiative 에 의해 시작된 프로젝트중 하나로서, Java로 개발된 독립 실행형 도구입니다. 이 도구를 사용하면 다양한 프로그래밍 언어로 작성된 API 클라이언트 라이브러리, 서버 스켈레톤 코드, 데이터 모델 등을 자동으로 생성할 수 있습니다.</p>\n<p>OpenAPI Generator는 미리 정의된 <a href=\"https://openapi-generator.tech/docs/generators\"><strong>Generator</strong></a>라 불리는 템플릿과 코드 생성기를 사용하여 OpenAPI 스펙을 분석하고 코드를 생성합니다. 이렇게 생성된 코드는 개발자가 API 호출 함수를 사용하거나 구현할 때 기반으로 사용됩니다.</p>\n<blockquote>\n<p><a href=\"https://openapi-generator.tech/docs/generators\">Geneartor 종류</a>에 따라 다양한 output(Java, Kotlin, typescript, etc.)을 만들 수 있습니다.</p>\n<p>웹 프론트 에서는 <a href=\"https://openapi-generator.tech/docs/generators/typescript-axios\"><strong>typescript-axios</strong></a>  나 <a href=\"https://openapi-generator.tech/docs/generators/typescript-fetch\"><strong>typescript-fetch</strong></a> 를 주로 사용합니다</p>\n</blockquote>\n<p>웹 프론트엔드 에서는 주로 <a href=\"https://openapi-generator.tech/docs/generators/typescript-axios\"><strong>typescript-axios</strong></a>  나 <a href=\"https://openapi-generator.tech/docs/generators/typescript-fetch\"><strong>typescript-fetch</strong></a>  라는 generator를 활용하고 있습니다.</p>\n<p>그 이유는, 이를 통해 자동으로 생성된 API 인터페이스와 API 호출 함수를 통해 백엔드와 프론트엔드 간의 주고받는 데이터들의 타입을 유지할수 있기 때문입니다.</p>\n<br>\n<h3 id=\"-요약\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD\" aria-label=\" 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 요약</h3>\n<p>OpenAPI Generator는 OpenAPI(Swagger) 스펙을 기반으로 API 클라이언트나 서버 코드를 자동으로 생성해주는 도구입니다.</p>\n<br>\n<br>\n<h2 id=\"3️⃣-openapi-generator-cli\" style=\"position:relative;\"><a href=\"#3%EF%B8%8F%E2%83%A3-openapi-generator-cli\" aria-label=\"3️⃣ openapi generator cli permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3️⃣ OpenAPI generator cli</h2>\n<p><strong>OpenAPI Generator CLI</strong> 는 OpenAPI Generator의 명령 프롬프트 인터페이스(Command Line Interface 이하 CLI) 버전입니다. OpenAPI Generator CLI를 사용하면 터미널이나 명령 프롬프트에서 CLI명령어를 입력하여 OpenAPI generator 를 실행시켜 코드를 생성하는 것이 가능합니다. 이를 통해 개발자는 자동 코드 생성 기능을 쉽게 사용할 수 있으며, CI/CD 파이프라인이나 스크립트 등에서도 사용할 수 있습니다. OpenAPI Generator CLI 는 개발자들에게 더 큰 유연성과 편의성을 제공하여 코드 생성 및 관리 작업을 자동화할 수 있게 해줍니다.</p>\n<br>\n<br>\n<h2 id=\"4️⃣-what-is-different\" style=\"position:relative;\"><a href=\"#4%EF%B8%8F%E2%83%A3-what-is-different\" aria-label=\"4️⃣ what is different permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4️⃣ What is different?</h2>\n<p>“그래서 OpenAPI generator 와 OpenAPI generator cli 가 뭔차인데?” 라고 생각하시는 분들이 계실것 같습니다.</p>\n<p>이 둘의 가장 큰 차이점은 앞서 설명된것처럼 해당 도구들이 사용되는 환경에 있습니다. <strong>OpenAPI generator</strong> 는 자바로 만들어진 독립적으로 실행가능한 도구입니다. 이 때문에 일부 Node 와 같은 개발환경에서 활용이 불가능하다는 단점이 있습니다. 하지만 <strong>OpenAPI-generator-cli</strong> 는 cli 명령어를 통해 OpenAPI generator 를 실행시키는 것이 가능하기 때문에 Node 와 같은 개발 환경에서도 OpenAPI 스펙 을 통한 코드생성 및 활용이 가능합니다.</p>\n<p>위와같은 이유로, 웹 프론트엔드에서는 아래의 명령어를 통해 OpenAPI generator cli 와 OpenAPI generator를 설치하여 개발에 활용하고 있습니다.</p>\n<br>\n<h3 id=\"-openapi-generator-install\" style=\"position:relative;\"><a href=\"#-openapi-generator-install\" aria-label=\" openapi generator install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔽 OpenAPI generator install</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install openapi-generator </code></pre></div>\n<h3 id=\"-openapi-generator-cli-install\" style=\"position:relative;\"><a href=\"#-openapi-generator-cli-install\" aria-label=\" openapi generator cli install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔽 OpenAPI generator cli install</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add -D @openapitools/openapi-generator-cli</code></pre></div>\n<br>\n<br>\n<h2 id=\"5️⃣-tmi\" style=\"position:relative;\"><a href=\"#5%EF%B8%8F%E2%83%A3-tmi\" aria-label=\"5️⃣ tmi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5️⃣ TMI</h2>\n<p><a href=\"https://gorillakim.github.io/open-api-and-openapi/\"><strong>앞선 포스팅</strong></a>에서 OpenAPI 는 Swagger 스팩으로부터 파생되었다고 말씀을 드렸었습니다. 때문에 이미 백엔드에서 Swagger를 사용하여 API 문서를 작성하고 있었다면, Swagger에 의해 작성된 OAS문서와OpenAPI Generator를 이용해 손쉽게 코드를 생성할 수 있습니다. 이를 통해 백엔드와 프론트엔드 개발자들은 최신 API 스펙과 일관된 코드를 유지하면서 협업을 원활하게 진행할 수 있습니다.</p>\n<br>\n<br>\n<h2 id=\"-예고편\" style=\"position:relative;\"><a href=\"#-%EC%98%88%EA%B3%A0%ED%8E%B8\" aria-label=\" 예고편 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔖 예고편</h2>\n<p><em>“프론트엔드에서 웹 애플리케이션을 만들때 각종 옵션들을 CLI 명령어로 전달하지 않고 OpenAPI generator 를 더 쉽고 잘 활용하는 방법이 없을까요?”</em></p>\n<p>네, 있습니다. 심지어 매번 openapi-generator 를 설치하지 않아도 되는 방법이 있습니다!</p>\n<p>바로 가시죠! <a href=\"https://gorillakim.github.io/openapitools/\">openapitools.json 활용편</a>!</p>\n<br>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1%EF%B8%8F%E2%83%A3-%EC%84%9C%EB%A1%A0\">1️⃣ 서론</a></p>\n</li>\n<li>\n<p><a href=\"#2%EF%B8%8F%E2%83%A3-openapi-generator\">2️⃣ OpenAPI generator</a></p>\n<ul>\n<li><a href=\"#-%EC%9A%94%EC%95%BD\">✅ 요약</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3%EF%B8%8F%E2%83%A3-openapi-generator-cli\">3️⃣ OpenAPI generator cli</a></p>\n</li>\n<li>\n<p><a href=\"#4%EF%B8%8F%E2%83%A3-what-is-different\">4️⃣ What is different?</a></p>\n<ul>\n<li><a href=\"#-openapi-generator-install\">🔽 OpenAPI generator install</a></li>\n<li><a href=\"#-openapi-generator-cli-install\">🔽 OpenAPI generator cli install</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5%EF%B8%8F%E2%83%A3-tmi\">5️⃣ TMI</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%88%EA%B3%A0%ED%8E%B8\">🔖 예고편</a></p>\n</li>\n</ul>\n</div>\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTEwMzc0NDY3MTUsOTc5MTY2NzE5XX0=\n-->","excerpt":"📚 알쓸코잡 : 알아두면 쓸모있는 코딩 잡학지식! 1️⃣ 서론 프론트엔드 영역에서 웹애플리케이션을 개발하다 보면 종종 백엔드 API와의 통신을 필요로 합니다. 이때 API와의 통합 작업은 많은 시간과 노력을 요구합니다. 특히 타입스크립트를 사용하고 있다면, 해야할 작업이 훨씬 많아지게 되는데요. 백엔드로 데이터를 요청할때 어떠한 형태로 보내야할지, 데이터를 받을때 어떠한 형태로 받을지에 대한 인터페이스 정의가 필요해지기 때문입니다. 이러한 작업을 더욱 효율적으로 수행하고 일관성 있는 코드를 유지하기 위해서 OpenAPI Generator 를 활용하는 방법이 있습니다. 지금부터 OpenAPI Generator 가 무엇인지 알아보도록 하겠습니다. 2️⃣ OpenAPI generator 앞선 포스팅에서 OpenAPI 와 OpenAPI를 만든 OpenAPI Initiative에 대해서 언급한적이 있었습니다. OpenAPI Generator는 OpenAPI Initiative 에 의해 시작된 프로…","frontmatter":{"date":"June 27, 2023","title":"OpenAPI-generator 와 OpenAPI-generator-cli","categories":"블로그 알쓸코잡 라이브러리","author":"gorillaKim","emoji":"✍️"},"fields":{"slug":"/openapi-generator-cli/"}},"next":{"id":"ddf05c8a-4abd-5305-acdb-7379970dae1e","html":"<blockquote>\n<p>📚 <strong>알쓸코잡 : 알아두면 쓸모있는 코딩 잡학지식!</strong></p>\n</blockquote>\n<br>\n<h2 id=\"1️⃣-서론\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-%EC%84%9C%EB%A1%A0\" aria-label=\"1️⃣ 서론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ 서론</h2>\n<p>개발을 하면서 Open API 라는 용어를 많이 접하게 됩니다. 최근에 비슷하지만 다른 의미를 갖는 OpenAPI 라는 용어를 알게 되었는데요. 이번글에서는 이 둘의 차이점이 무엇인지를 이야기 해볼까 합니다.</p>\n<br>\n<h2 id=\"2️⃣-open-api-와-openapi-\" style=\"position:relative;\"><a href=\"#2%EF%B8%8F%E2%83%A3-open-api-%EC%99%80-openapi-\" aria-label=\"2️⃣ open api 와 openapi  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2️⃣ Open API 와 OpenAPI ?</h2>\n<h3 id=\"1-open-api\" style=\"position:relative;\"><a href=\"#1-open-api\" aria-label=\"1 open api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) Open API</h3>\n<p><strong>Open API</strong> 는 단어의미 그대로 개발자라면 누구나 사용할 수 있도록 공개된 API를 말합니다. 대표적인 예시로 우편번호 API 나 공공API 포털에서 제공하는 것들이 있습니다.</p>\n<br>\n<h3 id=\"2--openapi\" style=\"position:relative;\"><a href=\"#2--openapi\" aria-label=\"2  openapi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2)  OpenAPI</h3>\n<p>반면에 <strong>Open API</strong> 와 띄어쓰기 한개(“ “) 밖에 차이가 나지 않는 <strong>OpenAPI</strong> 는 무슨뜻일까요?</p>\n<p><strong>OpenAPI</strong> 는 “OpenAPI Specification”의 약자로 OAS 라고도 불리며, API 설계와 문서화를 위한 오픈 표준 형식을 의미합니다. OpenAPI 는 RESTful API를 문서화하고 정의하기 위한 명세(Specification)를 작성하는 데 사용되며, 이 명세는 API의 엔드포인트, 매개변수, 요청과 응답 형식, 보안 설정 등을 세부적으로 기술합니다.</p>\n<br>\n<h3 id=\"3-openapi-initiative-oai\" style=\"position:relative;\"><a href=\"#3-openapi-initiative-oai\" aria-label=\"3 openapi initiative oai permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) OpenAPI Initiative (OAI)</h3>\n<p>번외로 OpenAPI를 관리하는 단체도 있는데요, 그곳이 바로 <strong>OpenAPI Initiative</strong> 입니다.</p>\n<p><strong>OpenAPI Initiative</strong> 는 Linux Foundation에 의해 주도되는 공개 표준 프로젝트로서, 다양한 업체와 개발자 커뮤니티가 참여하여 API 설계와 문서화를 위한 표준 형식인 <strong>OpenAPI Specification</strong>을 개발하고 유지보수하는 역할을 합니다.</p>\n<br>\n<h2 id=\"3️⃣-tmi\" style=\"position:relative;\"><a href=\"#3%EF%B8%8F%E2%83%A3-tmi\" aria-label=\"3️⃣ tmi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3️⃣ TMI</h2>\n<h3 id=\"-openapi-와-swagger-는-어떤-관계일까요\" style=\"position:relative;\"><a href=\"#-openapi-%EC%99%80-swagger-%EB%8A%94-%EC%96%B4%EB%96%A4-%EA%B4%80%EA%B3%84%EC%9D%BC%EA%B9%8C%EC%9A%94\" aria-label=\" openapi 와 swagger 는 어떤 관계일까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 OpenAPI 와 Swagger 는 어떤 관계일까요?</h3>\n<p><strong>OpenAPI</strong>는 <strong>Swagger Specification</strong> 이라고도 알려져 있는데요, OpenAPI 와 Swagger 는 어떤 관계일까요?</p>\n<p>사실 Swagger는 OpenAPI Specification의 이전 이름이었습니다. Swagger는 2011년에 Wordnik에서 개발되었으며, RESTful API를 설계, 문서화 및 테스트하기 위한 오픈 소스 도구로서 널리 사용되었습니다.</p>\n<p>그러나 2015년에 Swagger는 SmartBear Software의 협력으로 <strong>OpenAPI Initiative (OAI)</strong> 에 기여하게 되었으며, 이때 기존의 Swagger 기반으로 만들어진것이 OpenAPI Specification 입니다.</p>\n<p>즉, 어떻게보면 OpenAPI Specification은 Swagger Specification의 후속 버전이라고도 볼 수 있겠습니다.</p>\n<br>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1%EF%B8%8F%E2%83%A3-%EC%84%9C%EB%A1%A0\">1️⃣ 서론</a></p>\n</li>\n<li>\n<p><a href=\"#2%EF%B8%8F%E2%83%A3-open-api-%EC%99%80-openapi-\">2️⃣ Open API 와 OpenAPI ?</a></p>\n<ul>\n<li><a href=\"#1-open-api\">(1) Open API</a></li>\n<li><a href=\"#2--openapi\">(2)  OpenAPI</a></li>\n<li><a href=\"#3-openapi-initiative-oai\">(3) OpenAPI Initiative (OAI)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3%EF%B8%8F%E2%83%A3-tmi\">3️⃣ TMI</a></p>\n<ul>\n<li><a href=\"#-openapi-%EC%99%80-swagger-%EB%8A%94-%EC%96%B4%EB%96%A4-%EA%B4%80%EA%B3%84%EC%9D%BC%EA%B9%8C%EC%9A%94\">🤔 OpenAPI 와 Swagger 는 어떤 관계일까요?</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTE1ODc1OTQzNjQsMTQ3ODA0OTA3MCwyND\nQxMDAxNDAsLTE1NjUxOTkwOSwtMTM4NTk1ODU2Ml19\n-->","frontmatter":{"date":"June 22, 2023","title":"Open API 와 OpenAPI 란?","categories":"블로그 알쓸코잡","author":"gorillaKim","emoji":"✍️"},"fields":{"slug":"/open-api-and-openapi/"}},"prev":{"id":"28e9a9e3-03cc-51c2-9b68-ef85093dbe20","html":"<blockquote>\n<p>📚 <strong>알쓸코잡 : 알아두면 쓸모있는 코딩 잡학지식!</strong></p>\n</blockquote>\n<br>\n<h2 id=\"1️⃣-서론\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-%EC%84%9C%EB%A1%A0\" aria-label=\"1️⃣ 서론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ 서론</h2>\n<p>지난 <a href=\"https://gorillakim.github.io/openapi-generator-cli/\"><strong>포스팅</strong></a>에서 <code class=\"language-text\">openapi-generator</code> 는 자바로 만들어진 독립적인 프로그램이라고 말씀드렸습니다. 이러한 이유 때문에 Node 개발환경에서는 <code class=\"language-text\">openapi-generator</code> 를 조작하여 사용하는것이 어렵고 이때문에 <code class=\"language-text\">openapi-generator-cli</code> 를 함께 사용한다고 말씀을 드렸습니다.</p>\n<p><code class=\"language-text\">openapi-generator-cli</code> 를 사용하면 각종 커맨드 명령어(Command line interface) 를 통해 <code class=\"language-text\">openapi-generator</code> 를 조작이 가능하지만 명령을 내리기위한 코드가 길어지고 관리가 어렵다는 단점을 갖고 있습니다.</p>\n<p>이러한 문제점을 해결하기 위해 <code class=\"language-text\">openapitools.json</code> 이라는것이 존재하는데요, 이게 무엇이고 어떻게 사용하는지 지금부터 살펴보겠습니다.</p>\n<br>\n<br>\n<h2 id=\"2️⃣-openapi-generator-버전-관리\" style=\"position:relative;\"><a href=\"#2%EF%B8%8F%E2%83%A3-openapi-generator-%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC\" aria-label=\"2️⃣ openapi generator 버전 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2️⃣ openapi-generator 버전 관리</h2>\n<p>간혹 팀원들과 협업을 하다보면 동일한 Oepnapi spec 을 갖고 <code class=\"language-text\">openapi-generator</code> 를 통해 생성된 결과물이 서로 다를때가 있습니다. 해당 결과물들을 자세히 보면 띄어쓰기 혹은 interface를 표현하는 방식정도가 달라져 있는것을 볼 수 있습니다.</p>\n<p>동일한 Openapi spec 을 갖고 만들었지만 결과물이 다른 이유는 <code class=\"language-text\">openapi-generator</code> 를 실행시킨 사용자가 서로다른 버전의 <code class=\"language-text\">openapi-generator</code> 를 사용했기 때문입니다.</p>\n<p>openapi-generator 프로그램은 지속적으로 개선되고 있는 프로젝트인데요, 이 때문에 버전에 따라 Openapi spec을 해석하는 방식또한 달라지고 있습니다.</p>\n<p>이러한 문제 때문에 <code class=\"language-text\">@openapitools/openapi-generator-cli</code> 버전 2.xx 이상부터는 <code class=\"language-text\">openapi-generator</code> 버전관리 기능이 패키지에 추가가 되었습니다.</p>\n<p><img src=\"https://github.com/OpenAPITools/openapi-generator-cli/blob/master/img/vm.gif?raw=true\" alt=\"enter image description here\"></p>\n<p>아래의 명령어를 통해 <code class=\"language-text\">openapi-generator</code> 패키지 조회가 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">// Openapi-generator 패키지 리스트 조회\nnpx openapi-generator-cli version-manager list\n\n// Openapi-generator 안정화 버전 패키지 리스트 조회\nnpx openapi-generator-cli version-manager list stable</code></pre></div>\n<p>그리고 아래의 명령어를 통해 원하는 버전의 <code class=\"language-text\">openapi-generator</code> 를 설치할 수 있으며, 설치 시 <code class=\"language-text\">openapitools.json</code> 라는 이름의 파일 한개가 생성된것을 확인하실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">// 가장 최신 버전으로 셋팅\nnpx openapi-generator-cli version-manager <span class=\"token builtin class-name\">set</span> latest\n\n// <span class=\"token number\">4</span>.xx 때 안정된 버전으로 셋팅\nnpx openapi-generator-cli version-manager <span class=\"token builtin class-name\">set</span> <span class=\"token number\">4</span> stable</code></pre></div>\n<br>\n<br>\n<h2 id=\"3️⃣-openapitoolsjson-이란\" style=\"position:relative;\"><a href=\"#3%EF%B8%8F%E2%83%A3-openapitoolsjson-%EC%9D%B4%EB%9E%80\" aria-label=\"3️⃣ openapitoolsjson 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3️⃣ openapitools.json 이란?</h2>\n<p><code class=\"language-text\">openapitools.json</code> 은 <code class=\"language-text\">openapi-generator</code> 를 사용하기 위한 일종의 config 파일인데요, 해당 파일에서 사용할 <code class=\"language-text\">openapi-generator</code> 에 대한 버전명시 뿐 아니라 생성된 파일이 저장될 경로등 다양한 설정을 구성하실 수 있습니다.</p>\n<p>공식 깃헙 사이트를 방문해 보면, <code class=\"language-text\">opeanpitools.json</code> 에 대한 예제코드가 다음과 같이 나와 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"$schema\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node_modules/@openapitools/openapi-generator-cli/config.schema.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"spaces\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"generator-cli\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4.3.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"storageDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~/my/custom/storage/dir\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n    <span class=\"token property\">\"generators\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// optional</span>\n      <span class=\"token property\">\"v2.0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// any name you like (just printed to the console log or reference it using --generator-key) </span>\n        <span class=\"token property\">\"generatorName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"typescript-angular\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"output\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#{cwd}/output/v2.0/#{ext}/#{name}\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"glob\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"examples/v2.0/{json,yaml}/*.{json,yaml}\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"additionalProperties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"ngVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"6.1.7\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"npmName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"restClient\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"supportsES6\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"npmVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"6.9.0\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"withInterfaces\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"v3.0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// any name you like (just printed to the console log or reference it using --generator-key) </span>\n        <span class=\"token property\">\"generatorName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"typescript-fetch\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"output\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#{cwd}/output/v3.0/#{ext}/#{name}\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"glob\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"examples/v3.0/petstore.{json,yaml}\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>OpenAPI Tools은 API 개발과 관련된 작업을 보다 쉽게 처리하기 위한 유용한 도구입니다. 그 중 하나인 <code class=\"language-text\">openapitools.json</code> 파일은 <code class=\"language-text\">openapi-generator</code> 를 사용하기 위한 옵션들을 구성하고 관리하는 데 사용되는 파일입니다.</p>\n<p>그러나 아쉽게도 <a href=\"https://github.com/OpenAPITools/openapi-generator-cli#configuration\"><strong>공식 문서</strong></a>에서는 <code class=\"language-text\">openapitools.json</code> 사용 방법에 대한 자세한 내용이 부족한 상황입니다. 예제 코드에 대한 설명이나 다른 가능한 옵션들에 대한 정보도 찾기 어려울 수 있습니다. 이러한 이유로 <code class=\"language-text\">openapitools.json</code> 을 보다 효율적으로 활용하기 위해 저희는 스터디를 진행하게 되었습니다.</p>\n<p><code class=\"language-text\">openapitools.json</code> 은 결국 <code class=\"language-text\">openapi-generator</code> 를 조작하기 위한 설정 파일로서, <code class=\"language-text\">openapi-generator-cli</code> 에 구성된 다양한 옵션들을 활용하고 있습니다. 따라서 우리는 <a href=\"https://openapi-generator.tech/docs/usage/#generate\"><strong>openapi-generator의 공식 문서</strong></a> 와 <a href=\"https://github.com/OpenAPITools/openapi-generator-cli/blob/master/apps/generator-cli/src/config.schema.json\"><strong>openapi-generator-cli-shcema 파일</strong></a> 참고하여 <code class=\"language-text\">openapitools.json</code> 을 최대한 활용하는 방법을 찾아냈습니다.</p>\n<p>이 스터디를 통해 <code class=\"language-text\">openapitools.json</code> 의 다양한 옵션들과 그 활용 방법에 대한 이해를 높일 수 있었습니다. 더 나아가 API 개발을 보다 효율적으로 수행할 수 있도록 예제 코드와 함께 옵션들에 대한 상세한 설명을 블로그에 공유하고자 합니다. 이를 통해 개발자들이 <code class=\"language-text\">openapitools.json</code> 을 더욱 아름답게 활용할 수 있도록 돕고자 합니다.</p>\n<br>\n<br>\n<h2 id=\"4️⃣-openapitoolsjson-사용법\" style=\"position:relative;\"><a href=\"#4%EF%B8%8F%E2%83%A3-openapitoolsjson-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"4️⃣ openapitoolsjson 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4️⃣ openapitools.json 사용법!</h2>\n<blockquote>\n<p>:warning: 읽기전에 필독!,</p>\n<p>아래 해당 내용은 openapitools.json 의 모든 활용법을 알려드리지 않습니다. 자주 사용되는 옵션들에 대하여 알려드리고자 작성된 내용입니다.</p>\n<p>보다 다양한 옵션과 옵션별 스펙은 <a href=\"https://github.com/OpenAPITools/openapi-generator-cli/blob/master/apps/generator-cli/src/config.schema.json\"><strong>공식문서</strong></a>를 참고 바랍니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"$schema\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node_modules/@openapitools/openapi-generator-cli/config.schema.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"spaces\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  \n  <span class=\"token comment\">/* \n  * generator-cli: openapi-generator 를 실행시킬때 사용할 옵션을 작성하는 곳입니다. \n  * ( 보다 상세한 옵션은 아래 표를 참고 )\n  */</span>\n  <span class=\"token property\">\"generator-cli\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4.3.1\"</span> <span class=\"token comment\">// or the current latest version ;)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">/* 필수값이 아닙니다. \n\t* 사용할 `openapi-generator` 버전을 의미합니다.\n\t* 해당 옵션 설정 후 실행시 필요한 버전을 자동으로 다운받아 사용됩니다.\n\t*/</span>\n\t<span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ex) 4.3.1\"</span><span class=\"token punctuation\">,</span> \n\t\n\t<span class=\"token comment\">/* 필수값이 아닙니다. \n\t* `openapi-generator (.jar)` 파일이 저장될 경로\n\t*/</span>\n\t<span class=\"token literal-property property\">storageDir</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ex) ~/my/custom/storage/dir\"</span><span class=\"token punctuation\">,</span> \n\n\t<span class=\"token comment\">/* 필수값이 아닙니다. \n\t* openapi-generator-cli version 은 2.5.x 버전부터 사용가능한 옵션입니다.\n\t* https://github.com/OpenAPITools/openapi-generator-cli/blob/master/apps/generator-cli/src/config.schema.json\n\t*/</span>\n\t<span class=\"token literal-property property\">generators</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 어떤 이름도 들어올 수 있음</span>\n\t\t\t<span class=\"token comment\">/*\n\t\t\t* 생성할 api/model 언어 및 모듈 지정합니다.\n\t\t\t* https://openapi-generator.tech/docs/generators/\n\t\t\t*/</span>\n\t\t\t<span class=\"token literal-property property\">generatorName</span><span class=\"token operator\">:</span> <span class=\"token string\">'ex) typescript-axios'</span><span class=\"token punctuation\">,</span>\n\t\t\t\n\t\t\t<span class=\"token comment\">/*\n\t\t\t* generator 를 통해 생성된 파일을 저장할 경로\n\t\t\t*/</span>\n\t\t\t<span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token string\">'ex) #{cwd}/output/v2.0/#{ext}/#{name}'</span><span class=\"token punctuation\">,</span>\n\t\t\t\n\t\t\t<span class=\"token comment\">/*\n\t\t\t* 사용할 `openapi.json` (=OpenAPI Specification)파일 경로 혹은 URL 을 지정합니다.\n\t\t\t*/</span>\n\t\t\t<span class=\"token literal-property property\">inputSpec</span><span class=\"token operator\">:</span> <span class=\"token string\">'ex) https://dev.api.post.lever.me/openapi.json'</span><span class=\"token punctuation\">,</span>\n\n\t\t\t<span class=\"token comment\">/*\n\t\t\t* 생성되는 모델 파일명 뒤에 suffix를 달아줍니다.\n\t\t\t*/</span>\n\t\t\t<span class=\"token literal-property property\">modelNameSuffix</span><span class=\"token operator\">:</span> <span class=\"token string\">'ex) _test'</span><span class=\"token punctuation\">,</span>\n\t\t\t\n\t\t\t<span class=\"token comment\">/*\n\t\t\t* 입력 사양의 유효성을 검사하는 기본 동작을 건너뜁니다.\n\t\t\t*/</span>\n\t\t\t<span class=\"token literal-property property\">skipValidateSpec</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t\t\n\t\t\t<span class=\"token comment\">/*\n\t\t\t* 모델 생성시 추가적으로 사용 가능한 옵션입니다.\n\t\t\t* generator 상관없이 사용 가능한 기본옵션과, \n\t\t\t* generatorName 에서 선택한 generator 에서 지원하는 부가 옵션이 있습니다.\n\t\t\t* [기본 옵션]\n\t\t\t* --> https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-maven-plugin/README.md#general-configuration-parameters\n\t\t\t* [typescript-axios generator 옵션]\n\t\t\t* --> https://openapi-generator.tech/docs/generators/typescript-axios/\n\t\t\t*/</span>\n\t\t\t<span class=\"token literal-property property\">additionalProperties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\">/* 아래 3개 옵션은 typescript-axios option */</span>\n\t\t\t\t<span class=\"token literal-property property\">apiPackage</span><span class=\"token operator\">:</span> <span class=\"token string\">'ex) output'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// api를 생성할 경로</span>\n\t\t\t\t<span class=\"token literal-property property\">modelPackage</span><span class=\"token operator\">:</span> <span class=\"token string\">'ex) output'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// model을 생성할 경로</span>\n\t\t\t\t<span class=\"token literal-property property\">withSeparateModelsAndApi</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// api/model을 구분해서 생성할 지 여부</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1%EF%B8%8F%E2%83%A3-%EC%84%9C%EB%A1%A0\">1️⃣ 서론</a></li>\n<li><a href=\"#2%EF%B8%8F%E2%83%A3-openapi-generator-%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC\">2️⃣ openapi-generator 버전 관리</a></li>\n<li><a href=\"#3%EF%B8%8F%E2%83%A3-openapitoolsjson-%EC%9D%B4%EB%9E%80\">3️⃣ openapitools.json 이란?</a></li>\n<li><a href=\"#4%EF%B8%8F%E2%83%A3-openapitoolsjson-%EC%82%AC%EC%9A%A9%EB%B2%95\">4️⃣ openapitools.json 사용법!</a></li>\n</ul>\n</div>\n<!--stackedit_data:\neyJoaXN0b3J5IjpbOTgxMjU0MjYxLDczNzYzODM2OCw5MjA3NT\nQ1ODldfQ==\n-->","frontmatter":{"date":"July 05, 2023","title":"openapitools.json 활용편","categories":"블로그 알쓸코잡 라이브러리","author":"gorillaKim","emoji":"✍️"},"fields":{"slug":"/openapitools/"}},"site":{"siteMetadata":{"siteUrl":"https://gorillakim.github.io","comments":{"utterances":{"repo":"gorillaKim/gorillaKim.github.io"}}}}},"pageContext":{"slug":"/openapi-generator-cli/","nextSlug":"/open-api-and-openapi/","prevSlug":"/openapitools/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}